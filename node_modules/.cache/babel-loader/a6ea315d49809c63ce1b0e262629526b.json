{"ast":null,"code":"import _slicedToArray from \"/Users/Aizhan87/Desktop/github-finder/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Aizhan87/Desktop/github-finder/src/components/users/Search.js\";\nimport React, { useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport GithubContext from '../../context/github/githubContext';\n\nconst Search = ({\n  setAlert\n}) => {\n  const githubContext = useContext(GithubContext);\n\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        text = _useState2[0],\n        setText = _useState2[1];\n\n  const handleChange = e => setText(e.target.value);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (text === '') {\n      setAlert('Please enter something', 'light');\n    } else {\n      githubContext.searchUsers(text);\n      setText('');\n    }\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    name: \"text\",\n    placeholder: \"Search Users...\",\n    value: text,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Search\",\n    className: \"btn btn-dark\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  })), githubContext.users.length > 0 && React.createElement(\"button\", {\n    className: \"btn btn-light btn-block\",\n    onClick: githubContext.clearUsers,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \" Clear\"));\n};\n\nSearch.propTypes = {\n  setAlert: PropTypes.func.isRequired\n};\nexport default Search;","map":{"version":3,"sources":["/Users/Aizhan87/Desktop/github-finder/src/components/users/Search.js"],"names":["React","useState","useContext","PropTypes","GithubContext","Search","setAlert","githubContext","text","setText","handleChange","e","target","value","handleSubmit","preventDefault","searchUsers","users","length","clearUsers","propTypes","func","isRequired"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,aAAP,MAA0B,oCAA1B;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAC7B,QAAMC,aAAa,GAAGL,UAAU,CAACE,aAAD,CAAhC;;AAD6B,oBAELH,QAAQ,CAAC,EAAD,CAFH;AAAA;AAAA,QAEtBO,IAFsB;AAAA,QAEhBC,OAFgB;;AAI7B,QAAMC,YAAY,GAAGC,CAAC,IAAIF,OAAO,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAjC;;AAGA,QAAMC,YAAY,GAAGH,CAAC,IAAI;AACtBA,IAAAA,CAAC,CAACI,cAAF;;AACA,QAAIP,IAAI,KAAK,EAAb,EAAiB;AACbF,MAAAA,QAAQ,CAAC,wBAAD,EAA2B,OAA3B,CAAR;AACH,KAFD,MAEO;AACHC,MAAAA,aAAa,CAACS,WAAd,CAA0BR,IAA1B;AACAC,MAAAA,OAAO,CAAC,EAAD,CAAP;AACH;AACJ,GARD;;AAUA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AACI,IAAA,QAAQ,EAAEK,YADd;AAEI,IAAA,SAAS,EAAC,MAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGI;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,IAAI,EAAC,MAFT;AAGI,IAAA,WAAW,EAAC,iBAHhB;AAII,IAAA,KAAK,EAAEN,IAJX;AAKI,IAAA,QAAQ,EAAEE,YALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,EAUI;AAAO,IAAA,IAAI,EAAC,QAAZ;AACI,IAAA,KAAK,EAAC,QADV;AAEI,IAAA,SAAS,EAAC,cAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVJ,CADJ,EAeKH,aAAa,CAACU,KAAd,CAAoBC,MAApB,GAA6B,CAA7B,IAAkC;AAAQ,IAAA,SAAS,EAAC,yBAAlB;AAC/B,IAAA,OAAO,EAAEX,aAAa,CAACY,UADQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAfvC,CADJ;AAsBH,CAvCD;;AAyCAd,MAAM,CAACe,SAAP,GAAmB;AACfd,EAAAA,QAAQ,EAAEH,SAAS,CAACkB,IAAV,CAAeC;AADV,CAAnB;AAIA,eAAejB,MAAf","sourcesContent":["import React, { useState, useContext } from 'react'\nimport PropTypes from 'prop-types'\nimport GithubContext from '../../context/github/githubContext'\n\nconst Search = ({ setAlert }) => {\n    const githubContext = useContext(GithubContext)\n    const [text, setText] = useState('')\n\n    const handleChange = e => setText(e.target.value)\n\n\n    const handleSubmit = e => {\n        e.preventDefault()\n        if (text === '') {\n            setAlert('Please enter something', 'light')\n        } else {\n            githubContext.searchUsers(text)\n            setText('')\n        }\n    }\n\n    return (\n        <div>\n            <form\n                onSubmit={handleSubmit}\n                className=\"form\">\n                <input\n                    type=\"text\"\n                    name=\"text\"\n                    placeholder=\"Search Users...\"\n                    value={text}\n                    onChange={handleChange} />\n\n                <input type='submit'\n                    value=\"Search\"\n                    className=\"btn btn-dark\" />\n            </form>\n            {githubContext.users.length > 0 && <button className=\"btn btn-light btn-block\"\n                onClick={githubContext.clearUsers}> Clear\n                </button>}\n\n        </div>\n    )\n}\n\nSearch.propTypes = {\n    setAlert: PropTypes.func.isRequired\n}\n\nexport default Search\n"]},"metadata":{},"sourceType":"module"}