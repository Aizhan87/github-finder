{"ast":null,"code":"import _slicedToArray from \"/Users/Aizhan87/Desktop/github-finder/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Aizhan87/Desktop/github-finder/src/App.js\";\nimport React, { Fragment, useState } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport './App.css';\nimport Navbar from './components/layout/Navbar';\nimport Users from './components/users/Users';\nimport User from './components/users/User';\nimport Search from './components/users/Search';\nimport axios from 'axios';\nimport Alert from './components/layout/Alert';\nimport About from './components/pages/About';\nimport GithubState from './context/github/GithubState';\n\nconst App = () => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        users = _useState2[0],\n        setUsers = _useState2[1];\n\n  const _useState3 = useState({}),\n        _useState4 = _slicedToArray(_useState3, 2),\n        user = _useState4[0],\n        setUser = _useState4[1];\n\n  const _useState5 = useState([]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        repos = _useState6[0],\n        setRepos = _useState6[1];\n\n  const _useState7 = useState(false),\n        _useState8 = _slicedToArray(_useState7, 2),\n        loading = _useState8[0],\n        setLoading = _useState8[1];\n\n  const _useState9 = useState(null),\n        _useState10 = _slicedToArray(_useState9, 2),\n        alert = _useState10[0],\n        setAlert = _useState10[1];\n\n  const getUser = async username => {\n    setLoading(true);\n    const res = await axios.get(\"https://api.github.com/users/\".concat(username, \"?&client_id=\").concat(process.env.REACT_APP_GITHUB_CLIENT_ID, \"&client_secret=\").concat(process.env.REACT_APP_GITHUB_CLIENT_SECRET));\n    setUser(res.data);\n    setLoading(false);\n  };\n\n  const getUserRepos = async username => {\n    setLoading(true);\n    const res = await axios.get(\"https://api.github.com/users/\".concat(username, \"/repos?per_page=5&sort=created:asc&client_id=\").concat(process.env.REACT_APP_GITHUB_CLIENT_ID, \"&client_secret=\").concat(process.env.REACT_APP_GITHUB_CLIENT_SECRET));\n    setRepos(res.data);\n    setLoading(false);\n  };\n\n  const showAlert = (message, type) => {\n    setAlert({\n      message,\n      type\n    });\n    setTimeout(() => setAlert(null), 3000);\n  };\n\n  return React.createElement(GithubState, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(Router, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(Navbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(Alert, {\n    alert: alert,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    render: props => React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(Search, {\n      setAlert: showAlert,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(Users, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/about\",\n    component: About,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/user/:login\",\n    render: props => React.createElement(User, Object.assign({}, props, {\n      getUser: getUser,\n      getUserRepos: getUserRepos,\n      repos: repos,\n      user: user,\n      loading: loading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }))))));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/Aizhan87/Desktop/github-finder/src/App.js"],"names":["React","Fragment","useState","BrowserRouter","Router","Switch","Route","Navbar","Users","User","Search","axios","Alert","About","GithubState","App","users","setUsers","user","setUser","repos","setRepos","loading","setLoading","alert","setAlert","getUser","username","res","get","process","env","REACT_APP_GITHUB_CLIENT_ID","REACT_APP_GITHUB_CLIENT_SECRET","data","getUserRepos","showAlert","message","type","setTimeout","props"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,EAA0CC,KAA1C,QAAuD,kBAAvD;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,IAAP,MAAiB,yBAAjB;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,2BAAlB;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,WAAP,MAAwB,8BAAxB;;AAMA,MAAMC,GAAG,GAAG,MAAM;AAAA,oBACUb,QAAQ,CAAC,EAAD,CADlB;AAAA;AAAA,QACTc,KADS;AAAA,QACFC,QADE;;AAAA,qBAEQf,QAAQ,CAAC,EAAD,CAFhB;AAAA;AAAA,QAETgB,IAFS;AAAA,QAEHC,OAFG;;AAAA,qBAGUjB,QAAQ,CAAC,EAAD,CAHlB;AAAA;AAAA,QAGTkB,KAHS;AAAA,QAGFC,QAHE;;AAAA,qBAIcnB,QAAQ,CAAC,KAAD,CAJtB;AAAA;AAAA,QAIToB,OAJS;AAAA,QAIAC,UAJA;;AAAA,qBAKUrB,QAAQ,CAAC,IAAD,CALlB;AAAA;AAAA,QAKTsB,KALS;AAAA,QAKFC,QALE;;AAWhB,QAAMC,OAAO,GAAG,MAAOC,QAAP,IAAoB;AAClCJ,IAAAA,UAAU,CAAC,IAAD,CAAV;AAEA,UAAMK,GAAG,GAAG,MAAMjB,KAAK,CAACkB,GAAN,wCAA0CF,QAA1C,yBAAiEG,OAAO,CAACC,GAAR,CAAYC,0BAA7E,4BAAyHF,OAAO,CAACC,GAAR,CAAYE,8BAArI,EAAlB;AAEAd,IAAAA,OAAO,CAACS,GAAG,CAACM,IAAL,CAAP;AACAX,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GAPD;;AAUA,QAAMY,YAAY,GAAG,MAAOR,QAAP,IAAoB;AACvCJ,IAAAA,UAAU,CAAC,IAAD,CAAV;AACA,UAAMK,GAAG,GAAG,MAAMjB,KAAK,CAACkB,GAAN,wCAA0CF,QAA1C,0DAAkGG,OAAO,CAACC,GAAR,CAAYC,0BAA9G,4BAA0JF,OAAO,CAACC,GAAR,CAAYE,8BAAtK,EAAlB;AAGAZ,IAAAA,QAAQ,CAACO,GAAG,CAACM,IAAL,CAAR;AACAX,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GAPD;;AAYA,QAAMa,SAAS,GAAG,CAACC,OAAD,EAAUC,IAAV,KAAmB;AACnCb,IAAAA,QAAQ,CAAC;AAAEY,MAAAA,OAAF;AAAWC,MAAAA;AAAX,KAAD,CAAR;AACAC,IAAAA,UAAU,CAAC,MAAMd,QAAQ,CAAC,IAAD,CAAf,EAAuB,IAAvB,CAAV;AACD,GAHD;;AASA,SACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAED,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,GAAlB;AAAsB,IAAA,MAAM,EAAEgB,KAAK,IACjC,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AACE,MAAA,QAAQ,EAAEJ,SADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAIE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EASE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,QAAlB;AAA2B,IAAA,SAAS,EAAEvB,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,EAUE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,cAAlB;AACE,IAAA,MAAM,EAAE2B,KAAK,IACX,oBAAC,IAAD,oBACMA,KADN;AAEE,MAAA,OAAO,EAAEd,OAFX;AAGE,MAAA,YAAY,EAAES,YAHhB;AAIE,MAAA,KAAK,EAAEf,KAJT;AAKE,MAAA,IAAI,EAAEF,IALR;AAME,MAAA,OAAO,EAAEI,OANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,CAHF,CAHF,CADF,CADF,CADF;AAoCD,CA9ED;;AAgFA,eAAeP,GAAf","sourcesContent":["import React, { Fragment, useState } from 'react'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport './App.css';\nimport Navbar from './components/layout/Navbar'\nimport Users from './components/users/Users'\nimport User from './components/users/User'\nimport Search from './components/users/Search'\nimport axios from 'axios'\nimport Alert from './components/layout/Alert'\nimport About from './components/pages/About'\nimport GithubState from './context/github/GithubState'\n\n\n\n\n\nconst App = () => {\n  const [users, setUsers] = useState([])\n  const [user, setUser] = useState({})\n  const [repos, setRepos] = useState([])\n  const [loading, setLoading] = useState(false)\n  const [alert, setAlert] = useState(null)\n\n\n\n\n\n  const getUser = async (username) => {\n    setLoading(true)\n\n    const res = await axios.get(`https://api.github.com/users/${username}?&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`)\n\n    setUser(res.data)\n    setLoading(false)\n  }\n\n\n  const getUserRepos = async (username) => {\n    setLoading(true)\n    const res = await axios.get(`https://api.github.com/users/${username}/repos?per_page=5&sort=created:asc&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`)\n\n\n    setRepos(res.data)\n    setLoading(false)\n  }\n\n\n\n\n  const showAlert = (message, type) => {\n    setAlert({ message, type })\n    setTimeout(() => setAlert(null), 3000)\n  }\n\n\n\n\n\n  return (\n    <GithubState>\n      <Router>\n        <div className=\"App\" >\n\n          <Navbar />\n          <div className=\"container\">\n\n            <Alert alert={alert} />\n            <Switch>\n              <Route exact path='/' render={props => (\n                <Fragment>\n                  <Search\n                    setAlert={showAlert}\n                  />\n                  <Users />\n                </Fragment>\n              )} />\n              <Route exact path='/about' component={About} />\n              <Route exact path='/user/:login'\n                render={props => (\n                  <User\n                    {...props}\n                    getUser={getUser}\n                    getUserRepos={getUserRepos}\n                    repos={repos}\n                    user={user}\n                    loading={loading}\n                  />\n                )} />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    </GithubState>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}