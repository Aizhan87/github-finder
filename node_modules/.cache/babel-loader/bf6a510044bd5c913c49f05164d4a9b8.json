{"ast":null,"code":"import _slicedToArray from \"/Users/Aizhan87/Desktop/github-finder/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Aizhan87/Desktop/github-finder/src/context/github/GithubState.js\";\nimport React, { useReducer } from 'react';\nimport axios from 'axios';\nimport GithubContext from './githubContext';\nimport GithubReducer from './githubReducer';\nimport { SEARCH_USERS, GET_USER, CLEAR_USERS, GET_REPOS, SET_LOADING, SET_ALERT, REMOVE_ALERT } from '../types';\n\nconst GithubState = props => {\n  const initialState = {\n    users: [],\n    user: {},\n    repos: [],\n    loading: false\n  };\n\n  const _useReducer = useReducer(GithubReducer, initialState),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        state = _useReducer2[0],\n        dispatch = _useReducer2[1]; // Search Users\n\n\n  const searchUsers = async text => {\n    setLoading();\n    const res = await axios.get(\"https://api.github.com/search/users?q=\".concat(text, \"&client_id=\").concat(process.env.REACT_APP_GITHUB_CLIENT_ID, \"&client_secret=\").concat(process.env.REACT_APP_GITHUB_CLIENT_SECRET));\n    dispatch({\n      type: SEARCH_USERS,\n      payload: res.data.items\n    });\n  }; // Get User\n\n\n  const getUser = async username => {\n    setLoading();\n    const res = await axios.get(\"https://api.github.com/users/\".concat(username, \"?&client_id=\").concat(process.env.REACT_APP_GITHUB_CLIENT_ID, \"&client_secret=\").concat(process.env.REACT_APP_GITHUB_CLIENT_SECRET));\n    dispatch({\n      type: GET_USER,\n      payload: res.data\n    });\n  }; // Get Repos\n\n\n  const getUserRepos = async username => {\n    setLoading(true);\n    const res = await axios.get(\"https://api.github.com/users/\".concat(username, \"/repos?per_page=5&sort=created:asc&client_id=\").concat(process.env.REACT_APP_GITHUB_CLIENT_ID, \"&client_secret=\").concat(process.env.REACT_APP_GITHUB_CLIENT_SECRET));\n    dispatch({\n      type: GET_REPOS,\n      payload: res.data\n    });\n  }; // Clear Users\n\n\n  const clearUsers = () => dispatch({\n    type: CLEAR_USERS\n  }); // Set loading\n\n\n  const setLoading = () => dispatch({\n    type: SET_LOADING\n  });\n\n  return React.createElement(GithubContext.Provider, {\n    value: {\n      users: state.users,\n      user: state.user,\n      repos: state.repos,\n      loading: state.loading,\n      searchUsers,\n      clearUsers,\n      getUser,\n      getUserRepos\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default GithubState;","map":{"version":3,"sources":["/Users/Aizhan87/Desktop/github-finder/src/context/github/GithubState.js"],"names":["React","useReducer","axios","GithubContext","GithubReducer","SEARCH_USERS","GET_USER","CLEAR_USERS","GET_REPOS","SET_LOADING","SET_ALERT","REMOVE_ALERT","GithubState","props","initialState","users","user","repos","loading","state","dispatch","searchUsers","text","setLoading","res","get","process","env","REACT_APP_GITHUB_CLIENT_ID","REACT_APP_GITHUB_CLIENT_SECRET","type","payload","data","items","getUser","username","getUserRepos","clearUsers","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from 'react'\nimport axios from 'axios'\nimport GithubContext from './githubContext'\nimport GithubReducer from './githubReducer'\nimport {\n    SEARCH_USERS,\n    GET_USER,\n    CLEAR_USERS,\n    GET_REPOS,\n    SET_LOADING,\n    SET_ALERT,\n    REMOVE_ALERT\n} from '../types'\n\n\nconst GithubState = props => {\n    const initialState = {\n        users: [],\n        user: {},\n        repos: [],\n        loading: false\n    }\n    const [state, dispatch] = useReducer(GithubReducer, initialState)\n\n    // Search Users\n    const searchUsers = async text => {\n        setLoading()\n        const res = await axios.get(`https://api.github.com/search/users?q=${text}&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`)\n\n\n        dispatch({\n            type: SEARCH_USERS,\n            payload: res.data.items\n        })\n    }\n\n    // Get User\n    const getUser = async (username) => {\n        setLoading()\n\n        const res = await axios.get(`https://api.github.com/users/${username}?&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`)\n\n        dispatch({\n            type: GET_USER,\n            payload: res.data\n        })\n    }\n    // Get Repos\n\n    const getUserRepos = async (username) => {\n        setLoading(true)\n        const res = await axios.get(`https://api.github.com/users/${username}/repos?per_page=5&sort=created:asc&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`)\n\n        dispatch({\n            type: GET_REPOS,\n            payload: res.data\n        })\n\n    }\n\n    // Clear Users\n    const clearUsers = () => dispatch({ type: CLEAR_USERS })\n\n\n    // Set loading\n\n    const setLoading = () => dispatch({ type: SET_LOADING })\n\n    return <GithubContext.Provider\n        value={{\n            users: state.users,\n            user: state.user,\n            repos: state.repos,\n            loading: state.loading,\n            searchUsers,\n            clearUsers,\n            getUser,\n            getUserRepos\n        }}\n    >\n        {props.children}\n    </GithubContext.Provider>\n}\n\nexport default GithubState"]},"metadata":{},"sourceType":"module"}