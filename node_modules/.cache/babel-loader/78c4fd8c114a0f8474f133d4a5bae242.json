{"ast":null,"code":"import _slicedToArray from \"/Users/Aizhan87/Desktop/github-finder/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Aizhan87/Desktop/github-finder/src/components/users/Search.js\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst Search = ({\n  searchUsers,\n  showClear,\n  clearUsers,\n  setAlert\n}) => {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        text = _useState2[0],\n        setText = _useState2[1];\n\n  const handleChange = e => setText(e.target.value);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (text === '') {\n      setAlert('Please enter something', 'light');\n    } else {\n      searchUsers(text);\n      setText({\n        text: ''\n      });\n    }\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    name: \"text\",\n    placeholder: \"Search Users...\",\n    value: text,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Search\",\n    className: \"btn btn-dark\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  })), showClear && React.createElement(\"button\", {\n    className: \"btn btn-light btn-block\",\n    onClick: clearUsers,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \" Clear\"));\n};\n\nSearch.propTypes = {\n  searchUsers: PropTypes.func.isRequired,\n  clearUsers: PropTypes.func.isRequired,\n  showClear: PropTypes.bool.isRequired,\n  setAlert: PropTypes.func.isRequired\n};\nexport default Search;","map":{"version":3,"sources":["/Users/Aizhan87/Desktop/github-finder/src/components/users/Search.js"],"names":["React","useState","PropTypes","Search","searchUsers","showClear","clearUsers","setAlert","text","setText","handleChange","e","target","value","handleSubmit","preventDefault","propTypes","func","isRequired","bool"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,WAAF;AAAeC,EAAAA,SAAf;AAA0BC,EAAAA,UAA1B;AAAsCC,EAAAA;AAAtC,CAAD,KAAsD;AAAA,oBACzCN,QAAQ,CAAC,EAAD,CADiC;AAAA;AAAA,QAC1DO,IAD0D;AAAA,QACpDC,OADoD;;AAGjE,QAAMC,YAAY,GAAGC,CAAC,IAAIF,OAAO,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAjC;;AAGA,QAAMC,YAAY,GAAGH,CAAC,IAAI;AACtBA,IAAAA,CAAC,CAACI,cAAF;;AACA,QAAIP,IAAI,KAAK,EAAb,EAAiB;AACbD,MAAAA,QAAQ,CAAC,wBAAD,EAA2B,OAA3B,CAAR;AACH,KAFD,MAEO;AACHH,MAAAA,WAAW,CAACI,IAAD,CAAX;AACAC,MAAAA,OAAO,CAAC;AAAED,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAP;AACH;AACJ,GARD;;AAUA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AACI,IAAA,QAAQ,EAAEM,YADd;AAEI,IAAA,SAAS,EAAC,MAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGI;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,IAAI,EAAC,MAFT;AAGI,IAAA,WAAW,EAAC,iBAHhB;AAII,IAAA,KAAK,EAAEN,IAJX;AAKI,IAAA,QAAQ,EAAEE,YALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,EAUI;AAAO,IAAA,IAAI,EAAC,QAAZ;AACI,IAAA,KAAK,EAAC,QADV;AAEI,IAAA,SAAS,EAAC,cAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVJ,CADJ,EAeKL,SAAS,IAAI;AAAQ,IAAA,SAAS,EAAC,yBAAlB;AACV,IAAA,OAAO,EAAEC,UADC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAflB,CADJ;AAsBH,CAtCD;;AAwCAH,MAAM,CAACa,SAAP,GAAmB;AACfZ,EAAAA,WAAW,EAAEF,SAAS,CAACe,IAAV,CAAeC,UADb;AAEfZ,EAAAA,UAAU,EAAEJ,SAAS,CAACe,IAAV,CAAeC,UAFZ;AAGfb,EAAAA,SAAS,EAAEH,SAAS,CAACiB,IAAV,CAAeD,UAHX;AAIfX,EAAAA,QAAQ,EAAEL,SAAS,CAACe,IAAV,CAAeC;AAJV,CAAnB;AAOA,eAAef,MAAf","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\nconst Search = ({ searchUsers, showClear, clearUsers, setAlert }) => {\n    const [text, setText] = useState('')\n\n    const handleChange = e => setText(e.target.value)\n\n\n    const handleSubmit = e => {\n        e.preventDefault()\n        if (text === '') {\n            setAlert('Please enter something', 'light')\n        } else {\n            searchUsers(text)\n            setText({ text: '' })\n        }\n    }\n\n    return (\n        <div>\n            <form\n                onSubmit={handleSubmit}\n                className=\"form\">\n                <input\n                    type=\"text\"\n                    name=\"text\"\n                    placeholder=\"Search Users...\"\n                    value={text}\n                    onChange={handleChange} />\n\n                <input type='submit'\n                    value=\"Search\"\n                    className=\"btn btn-dark\" />\n            </form>\n            {showClear && <button className=\"btn btn-light btn-block\"\n                onClick={clearUsers}> Clear\n                </button>}\n\n        </div>\n    )\n}\n\nSearch.propTypes = {\n    searchUsers: PropTypes.func.isRequired,\n    clearUsers: PropTypes.func.isRequired,\n    showClear: PropTypes.bool.isRequired,\n    setAlert: PropTypes.func.isRequired\n}\n\nexport default Search\n"]},"metadata":{},"sourceType":"module"}