{"ast":null,"code":"import _slicedToArray from \"/Users/Aizhan87/Desktop/github-finder/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Aizhan87/Desktop/github-finder/src/context/github/GithubState.js\";\nimport React, { useReducer } from 'react';\nimport axios from 'axios';\nimport GithubContext from './githubContext';\nimport GithubReducer from './githubReducer';\nimport { SEARCH_USERS, GET_USER, CLEAR_USERS, GET_REPOS, SET_LOADING, SET_ALERT, REMOVE_ALERT } from '../types';\n\nconst GithubState = props => {\n  const initialState = {\n    users: [],\n    user: {},\n    repos: [],\n    loading: false\n  };\n\n  const _useReducer = useReducer(GithubReducer, initialState),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        state = _useReducer2[0],\n        dispatch = _useReducer2[1]; // Search Users\n  // Get User\n  // Get Repos\n  // Clear Users\n  // Set loading\n\n\n  return React.createElement(GithubContext.Provider, {\n    value: {\n      users: state.users,\n      user: state.user,\n      repos: state.repos,\n      loading: state.loading\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default GithubState;","map":{"version":3,"sources":["/Users/Aizhan87/Desktop/github-finder/src/context/github/GithubState.js"],"names":["React","useReducer","axios","GithubContext","GithubReducer","SEARCH_USERS","GET_USER","CLEAR_USERS","GET_REPOS","SET_LOADING","SET_ALERT","REMOVE_ALERT","GithubState","props","initialState","users","user","repos","loading","state","dispatch","children"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SACIC,YADJ,EAEIC,QAFJ,EAGIC,WAHJ,EAIIC,SAJJ,EAKIC,WALJ,EAMIC,SANJ,EAOIC,YAPJ,QAQO,UARP;;AAWA,MAAMC,WAAW,GAAGC,KAAK,IAAI;AACzB,QAAMC,YAAY,GAAG;AACjBC,IAAAA,KAAK,EAAE,EADU;AAEjBC,IAAAA,IAAI,EAAE,EAFW;AAGjBC,IAAAA,KAAK,EAAE,EAHU;AAIjBC,IAAAA,OAAO,EAAE;AAJQ,GAArB;;AADyB,sBAOCjB,UAAU,CAACG,aAAD,EAAgBU,YAAhB,CAPX;AAAA;AAAA,QAOlBK,KAPkB;AAAA,QAOXC,QAPW,oBASzB;AAEA;AAEA;AAEA;AAEA;;;AAEA,SAAO,oBAAC,aAAD,CAAe,QAAf;AACH,IAAA,KAAK,EAAE;AACHL,MAAAA,KAAK,EAAEI,KAAK,CAACJ,KADV;AAEHC,MAAAA,IAAI,EAAEG,KAAK,CAACH,IAFT;AAGHC,MAAAA,KAAK,EAAEE,KAAK,CAACF,KAHV;AAIHC,MAAAA,OAAO,EAAEC,KAAK,CAACD;AAJZ,KADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQFL,KAAK,CAACQ,QARJ,CAAP;AAUH,CA7BD;;AA+BA,eAAeT,WAAf","sourcesContent":["import React, { useReducer } from 'react'\nimport axios from 'axios'\nimport GithubContext from './githubContext'\nimport GithubReducer from './githubReducer'\nimport {\n    SEARCH_USERS,\n    GET_USER,\n    CLEAR_USERS,\n    GET_REPOS,\n    SET_LOADING,\n    SET_ALERT,\n    REMOVE_ALERT\n} from '../types'\n\n\nconst GithubState = props => {\n    const initialState = {\n        users: [],\n        user: {},\n        repos: [],\n        loading: false\n    }\n    const [state, dispatch] = useReducer(GithubReducer, initialState)\n\n    // Search Users\n\n    // Get User\n\n    // Get Repos\n\n    // Clear Users\n\n    // Set loading\n\n    return <GithubContext.Provider\n        value={{\n            users: state.users,\n            user: state.user,\n            repos: state.repos,\n            loading: state.loading\n        }}\n    >\n        {props.children}\n    </GithubContext.Provider>\n}\n\nexport default GithubState"]},"metadata":{},"sourceType":"module"}