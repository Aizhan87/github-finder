{"ast":null,"code":"var _jsxFileName = \"/Users/Aizhan87/Desktop/github-finder/src/components/users/User.js\";\nimport React, { Fragment, useEffect, useContext } from 'react';\nimport Spinner from '../layout/Spinner';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport Repos from '../repos/Repos';\nimport GithubContext from '../../context/github/githubContext';\nimport githubContext from '../../context/github/githubContext';\n\nconst User = ({\n  getUserRepos,\n  repos,\n  match\n}) => {\n  const getUser = githubContext.getUser,\n        loading = githubContext.loading,\n        user = githubContext.user;\n  useEffect(() => {\n    getUser(match.params.login);\n    getUserRepos(match.params.login); //eslint-disable-next-line\n  }, []);\n  const name = user.name,\n        avatar_url = user.avatar_url,\n        location = user.location,\n        bio = user.bio,\n        login = user.login,\n        html_url = user.html_url,\n        followers = user.followers,\n        following = user.following,\n        public_repos = user.public_repos,\n        public_gists = user.public_gists,\n        hireable = user.hireable;\n  if (loading) return React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  });\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/\",\n    className: \"btn btn-light\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"Back to Search\"), \"Hireable: \", '', hireable ? React.createElement(\"i\", {\n    className: \"fas fa-check text-success\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }) : React.createElement(\"i\", {\n    className: \"fas fa-times-circle text-danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"card grid-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"all-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: avatar_url,\n    className: \"round-img\",\n    alt: \"\",\n    style: {\n      width: '150px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, name), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Location: \", location)), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, bio && React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Bio\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, bio)), React.createElement(\"a\", {\n    href: html_url,\n    className: \"btn btn-dark my-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Visit GitHub Profile\"), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, login && React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Username: \"), \" \", login))))), React.createElement(\"div\", {\n    className: \"card text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"badge badge-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"Follower: \", followers), React.createElement(\"div\", {\n    className: \"badge badge-success\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Following:  \", following), React.createElement(\"div\", {\n    className: \"badge badge-danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"Public Repos:  \", public_repos), React.createElement(\"div\", {\n    className: \"badge badge-dark\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"Public Gists:  \", public_gists)), React.createElement(\"h2\", {\n    className: \"text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Latest repos in ascending order:\"), React.createElement(Repos, {\n    repos: repos,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }));\n};\n\nUser.propTypes = {\n  loading: PropTypes.bool,\n  user: PropTypes.object.isRequired,\n  repos: PropTypes.array.isRequired,\n  getUser: PropTypes.func.isRequired,\n  getUserRepos: PropTypes.func.isRequired\n};\nexport default User;","map":{"version":3,"sources":["/Users/Aizhan87/Desktop/github-finder/src/components/users/User.js"],"names":["React","Fragment","useEffect","useContext","Spinner","PropTypes","Link","Repos","GithubContext","githubContext","User","getUserRepos","repos","match","getUser","loading","user","params","login","name","avatar_url","location","bio","html_url","followers","following","public_repos","public_gists","hireable","width","propTypes","bool","object","isRequired","array","func"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useContext } from 'react'\nimport Spinner from '../layout/Spinner'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\nimport Repos from '../repos/Repos'\nimport GithubContext from '../../context/github/githubContext'\nimport githubContext from '../../context/github/githubContext';\n\nconst User = ({ getUserRepos, repos, match }) => {\n    const { getUser, loading, user } = githubContext\n\n    useEffect(() => {\n        getUser(match.params.login)\n        getUserRepos(match.params.login)\n        //eslint-disable-next-line\n    }, [])\n\n\n\n    const { name, avatar_url, location, bio, login, html_url, followers, following, public_repos, public_gists, hireable } = user\n\n\n\n    if (loading) return <Spinner />\n\n    return (\n        <Fragment>\n            <Link to='/' className=\"btn btn-light\">\n                Back to Search\n                 </Link>\n            Hireable: {''}\n            {hireable ? <i className=\"fas fa-check text-success\" /> : <i className=\"fas fa-times-circle text-danger\" />}\n            <div className=\"card grid-2\">\n                <div className=\"all-center\">\n                    <img src={avatar_url} className=\"round-img\" alt='' style={{ width: '150px' }} />\n                    <h1>{name}</h1>\n                    <p>Location: {location}</p>\n                </div>\n                <div>\n                    {bio && (<Fragment>\n                        <h3>Bio</h3>\n                        <p>{bio}</p>\n                    </Fragment>)}\n                    <a href={html_url} className=\"btn btn-dark my-1\">Visit GitHub Profile</a>\n                    <ul>\n                        <li>\n                            {login && <Fragment>\n                                <strong>Username: </strong> {login}\n                            </Fragment>}\n                        </li>\n                    </ul>\n                </div>\n            </div>\n            <div className=\"card text-center\">\n                <div className=\"badge badge-primary\">Follower: {followers}</div>\n                <div className=\"badge badge-success\">Following:  {following}</div>\n                <div className=\"badge badge-danger\">Public Repos:  {public_repos}</div>\n                <div className=\"badge badge-dark\">Public Gists:  {public_gists}</div>\n            </div>\n            <h2 className=\"text-center\">Latest repos in ascending order:</h2>\n            <Repos repos={repos} />\n        </Fragment>\n    )\n}\n\nUser.propTypes = {\n    loading: PropTypes.bool,\n    user: PropTypes.object.isRequired,\n    repos: PropTypes.array.isRequired,\n    getUser: PropTypes.func.isRequired,\n    getUserRepos: PropTypes.func.isRequired\n}\n\nexport default User\n"]},"metadata":{},"sourceType":"module"}